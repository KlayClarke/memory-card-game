{"ast":null,"code":"var _jsxFileName = \"/Users/klayclarke/Desktop/Development/javascript/portfolio/memory-card-game/src/App.js\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cards = () => {\n  const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Cards;\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = App;\nexport default App; // PLAN\n// must make a game that has 12 cards, user clicks on a card and the cards shuffl (user current score increases)\n// if user clicks on same card twice, score resets --> if previous score was highest score of session, high score is prev\n// MUST HAVE COMPONENTS\n// scoreboard that shows current score and highest session score\n// cards on screen that have discernible text, images - able to click\n// display said cards in random order at when component mounts\n//\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cards\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/klayclarke/Desktop/Development/javascript/portfolio/memory-card-game/src/App.js"],"names":["Cards","cards","map","card","App"],"mappings":";AAAA,OAAO,WAAP;;;AAEA,MAAMA,KAAK,GAAG,MAAM;AAClB,QAAMC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,CAAd;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,cACGA,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACT;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAVD;;KAAMH,K;;AAYN,MAAMI,GAAG,GAAG,MAAM;AAChB,sBACE;AAAA,2BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMA,G;AAQN,eAAeA,GAAf,C,CAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import \"./App.css\";\n\nconst Cards = () => {\n  const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  return (\n    <div className=\"\">\n      {cards.map((card) => (\n        <div className=\"card\">{card}</div>\n      ))}\n    </div>\n  );\n};\n\nconst App = () => {\n  return (\n    <div>\n      <Cards />\n    </div>\n  );\n};\n\nexport default App;\n\n// PLAN\n\n// must make a game that has 12 cards, user clicks on a card and the cards shuffl (user current score increases)\n// if user clicks on same card twice, score resets --> if previous score was highest score of session, high score is prev\n\n// MUST HAVE COMPONENTS\n// scoreboard that shows current score and highest session score\n// cards on screen that have discernible text, images - able to click\n// display said cards in random order at when component mounts\n//\n"]},"metadata":{},"sourceType":"module"}