{"ast":null,"code":"var _jsxFileName = \"/Users/klayclarke/Desktop/Development/javascript/portfolio/memory-card-game/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cards = _ref => {\n  _s();\n\n  let {\n    currentScore,\n    highScore,\n    setCurrentScore,\n    setHighScore\n  } = _ref;\n  const [cards, setCards] = useState([\"https://gtspirit.com/wp-content/uploads/2021/06/02_hispeed_css-e1624431465349.jpg\", \"https://stimg.cardekho.com/images/carexteriorimages/630x420/Lamborghini/Aventador/6721/Lamborghini-Aventador-SVJ/1621849426405/front-left-side-47.jpg?tr=w-135\", \"https://cdn.motor1.com/images/mgl/2Y3bx/s1/mclaren-p1.jpg\", \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/2021-mercedes-amg-gt-black-series-118-1601842340.jpg?crop=0.817xw:0.612xh;0.183xw,0.281xh&resize=1200:*\", \"https://cdn.motor1.com/images/mgl/VA0z9/s1/tesla-roadster.webp\", \"https://cdn.motor1.com/images/mgl/6yPGX/s1/2021-dodge-charger-srt-hellcat-redeye.jpg\", \"https://hips.hearstapps.com/hmg-prod/amv-prod-cad-assets/images/17q1/674191/2017-bentley-continental-supersports-revealed-news-car-and-driver-photo-674309-s-original.jpg?fill=2:1&resize=1200:*\", \"https://www.topgear.com/sites/default/files/images/news-article/2019/01/dfeb7f2af3355f55796bda3e86b8d6ed/row_9371.jpg\", \"https://media.autoexpress.co.uk/image/private/s--X-WVjvBW--/f_auto,t_content-image-full-desktop@1/v1579701747/autoexpress/2019/06/01_14.jpg\"]);\n  const [clickedCards, setClickedCards] = useState([]);\n\n  function shuffle(array) {\n    let currentIndex = array.length,\n        randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n  function checkForHighScore() {\n    if (currentScore > highScore) {\n      setHighScore(currentScore);\n    }\n  }\n\n  function currentScoreIncrement(e) {\n    if (!clickedCards.includes(e.target.id)) {\n      setCurrentScore(currentScore + 1);\n      setClickedCards([...clickedCards, e.target.id]);\n    } else {\n      checkForHighScore();\n      setCurrentScore(0);\n      setClickedCards([]);\n    }\n  }\n\n  function handleCardClick(e) {\n    currentScoreIncrement(e);\n  }\n\n  useEffect(() => {\n    setCards(shuffle(cards));\n    console.log(clickedCards);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"grid-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cards-grid\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card-item\",\n          src: card,\n          onClick: handleCardClick,\n          id: card\n        }, card, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cards, \"0GROWyqDqfm1puZBlS8xc8q1PBE=\");\n\n_c = Cards;\n\nconst GameBoard = () => {\n  _s2();\n\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"score\",\n      children: [\"Current Score: \", currentScore, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 39\n      }, this), \"High Score: \", highScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        currentScore: currentScore,\n        highScore: highScore,\n        setCurrentScore: setCurrentScore,\n        setHighScore: setHighScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(GameBoard, \"dBvmjImXalc5zE0zjNvs3NXwJN0=\");\n\n_c2 = GameBoard;\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main-container\",\n    children: /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = App;\nexport default App; // PLAN\n// must make a game that has 12 cards, user clicks on a card and the cards shuffl (user current score increases)\n// if user clicks on same card twice, score resets --> if previous score was highest score of session, high score is prev\n// MUST HAVE COMPONENTS\n// scoreboard that shows current score and highest session score\n// cards on screen that have discernible text, images - able to click\n// display said cards in random order at when component mounts\n//\n// if user hits same card twice in session, reset currentScore - if high score, update high score\n// if user score is cards length, user wins\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Cards\");\n$RefreshReg$(_c2, \"GameBoard\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/klayclarke/Desktop/Development/javascript/portfolio/memory-card-game/src/App.js"],"names":["useState","useEffect","Cards","currentScore","highScore","setCurrentScore","setHighScore","cards","setCards","clickedCards","setClickedCards","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","checkForHighScore","currentScoreIncrement","e","includes","target","id","handleCardClick","console","log","map","card","GameBoard","App"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\nconst Cards = ({ currentScore, highScore, setCurrentScore, setHighScore }) => {\n  const [cards, setCards] = useState([\n    \"https://gtspirit.com/wp-content/uploads/2021/06/02_hispeed_css-e1624431465349.jpg\",\n    \"https://stimg.cardekho.com/images/carexteriorimages/630x420/Lamborghini/Aventador/6721/Lamborghini-Aventador-SVJ/1621849426405/front-left-side-47.jpg?tr=w-135\",\n    \"https://cdn.motor1.com/images/mgl/2Y3bx/s1/mclaren-p1.jpg\",\n    \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/2021-mercedes-amg-gt-black-series-118-1601842340.jpg?crop=0.817xw:0.612xh;0.183xw,0.281xh&resize=1200:*\",\n    \"https://cdn.motor1.com/images/mgl/VA0z9/s1/tesla-roadster.webp\",\n    \"https://cdn.motor1.com/images/mgl/6yPGX/s1/2021-dodge-charger-srt-hellcat-redeye.jpg\",\n    \"https://hips.hearstapps.com/hmg-prod/amv-prod-cad-assets/images/17q1/674191/2017-bentley-continental-supersports-revealed-news-car-and-driver-photo-674309-s-original.jpg?fill=2:1&resize=1200:*\",\n    \"https://www.topgear.com/sites/default/files/images/news-article/2019/01/dfeb7f2af3355f55796bda3e86b8d6ed/row_9371.jpg\",\n    \"https://media.autoexpress.co.uk/image/private/s--X-WVjvBW--/f_auto,t_content-image-full-desktop@1/v1579701747/autoexpress/2019/06/01_14.jpg\",\n  ]);\n  const [clickedCards, setClickedCards] = useState([]);\n\n  function shuffle(array) {\n    let currentIndex = array.length,\n      randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex],\n        array[currentIndex],\n      ];\n    }\n    return array;\n  }\n\n  function checkForHighScore() {\n    if (currentScore > highScore) {\n      setHighScore(currentScore);\n    }\n  }\n\n  function currentScoreIncrement(e) {\n    if (!clickedCards.includes(e.target.id)) {\n      setCurrentScore(currentScore + 1);\n      setClickedCards([...clickedCards, e.target.id]);\n    } else {\n      checkForHighScore();\n      setCurrentScore(0);\n      setClickedCards([]);\n    }\n  }\n\n  function handleCardClick(e) {\n    currentScoreIncrement(e);\n  }\n\n  useEffect(() => {\n    setCards(shuffle(cards));\n    console.log(clickedCards);\n  });\n\n  return (\n    <div>\n      <div id=\"grid-container\">\n        <div id=\"cards-grid\">\n          {cards.map((card) => (\n            <img\n              className=\"card-item\"\n              src={card}\n              onClick={handleCardClick}\n              id={card}\n              key={card}\n            ></img>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst GameBoard = () => {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  return (\n    <div>\n      <div id=\"score\">\n        Current Score: {currentScore} <br />\n        High Score: {highScore}\n      </div>\n      <div>\n        <Cards\n          currentScore={currentScore}\n          highScore={highScore}\n          setCurrentScore={setCurrentScore}\n          setHighScore={setHighScore}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  return (\n    <div id=\"main-container\">\n      <Cards />\n    </div>\n  );\n};\n\nexport default App;\n\n// PLAN\n\n// must make a game that has 12 cards, user clicks on a card and the cards shuffl (user current score increases)\n// if user clicks on same card twice, score resets --> if previous score was highest score of session, high score is prev\n\n// MUST HAVE COMPONENTS\n// scoreboard that shows current score and highest session score\n// cards on screen that have discernible text, images - able to click\n// display said cards in random order at when component mounts\n//\n\n// if user hits same card twice in session, reset currentScore - if high score, update high score\n// if user score is cards length, user wins\n"]},"metadata":{},"sourceType":"module"}