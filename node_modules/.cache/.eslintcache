[{"/Users/klayclarke/Desktop/Development/javascript/portfolio/memory-card-game/src/index.js":"1","/Users/klayclarke/Desktop/Development/javascript/portfolio/memory-card-game/src/App.js":"2"},{"size":197,"mtime":1645597815028,"results":"3","hashOfConfig":"4"},{"size":3865,"mtime":1645637052817,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k0hz8y",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"/Users/klayclarke/Desktop/Development/javascript/portfolio/memory-card-game/src/index.js",[],[],"/Users/klayclarke/Desktop/Development/javascript/portfolio/memory-card-game/src/App.js",["13","14"],[],"import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\nconst Cards = ({ currentScore, highScore, setCurrentScore, setHighScore }) => {\n  const [cards, setCards] = useState([\n    \"https://gtspirit.com/wp-content/uploads/2021/06/02_hispeed_css-e1624431465349.jpg\",\n    \"https://stimg.cardekho.com/images/carexteriorimages/630x420/Lamborghini/Aventador/6721/Lamborghini-Aventador-SVJ/1621849426405/front-left-side-47.jpg?tr=w-135\",\n    \"https://cdn.motor1.com/images/mgl/2Y3bx/s1/mclaren-p1.jpg\",\n    \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/2021-mercedes-amg-gt-black-series-118-1601842340.jpg?crop=0.817xw:0.612xh;0.183xw,0.281xh&resize=1200:*\",\n    \"https://cdn.motor1.com/images/mgl/VA0z9/s1/tesla-roadster.webp\",\n    \"https://cdn.motor1.com/images/mgl/6yPGX/s1/2021-dodge-charger-srt-hellcat-redeye.jpg\",\n    \"https://hips.hearstapps.com/hmg-prod/amv-prod-cad-assets/images/17q1/674191/2017-bentley-continental-supersports-revealed-news-car-and-driver-photo-674309-s-original.jpg?fill=2:1&resize=1200:*\",\n    \"https://www.topgear.com/sites/default/files/images/news-article/2019/01/dfeb7f2af3355f55796bda3e86b8d6ed/row_9371.jpg\",\n    \"https://media.autoexpress.co.uk/image/private/s--X-WVjvBW--/f_auto,t_content-image-full-desktop@1/v1579701747/autoexpress/2019/06/01_14.jpg\",\n  ]);\n  const [clickedCards, setClickedCards] = useState([]);\n\n  function shuffle(array) {\n    let currentIndex = array.length,\n      randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex],\n        array[currentIndex],\n      ];\n    }\n    return array;\n  }\n\n  function checkForHighScore() {\n    if (currentScore > highScore) {\n      setHighScore(currentScore);\n    }\n  }\n\n  function currentScoreIncrement(e) {\n    if (!clickedCards.includes(e.target.id)) {\n      setCurrentScore(currentScore + 1);\n      setClickedCards([...clickedCards, e.target.id]);\n    } else {\n      checkForHighScore();\n      setCurrentScore(0);\n      setClickedCards([]);\n    }\n  }\n\n  function handleCardClick(e) {\n    currentScoreIncrement(e);\n  }\n\n  useEffect(() => {\n    setCards(shuffle(cards));\n    console.log(clickedCards);\n  });\n\n  return (\n    <div>\n      <div id=\"grid-container\">\n        <div id=\"cards-grid\">\n          {cards.map((card) => (\n            <img\n              className=\"card-item\"\n              src={card}\n              onClick={handleCardClick}\n              id={card}\n              key={card}\n            ></img>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst GameBoard = () => {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  return (\n    <div>\n      <div id=\"score\">\n        Current Score: {currentScore} <br />\n        High Score: {highScore}\n      </div>\n      <div>\n        <Cards\n          currentScore={currentScore}\n          highScore={highScore}\n          setCurrentScore={setCurrentScore}\n          setHighScore={setHighScore}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  return (\n    <div id=\"main-container\">\n      <GameBoard />\n    </div>\n  );\n};\n\nexport default App;\n\n// PLAN\n\n// must make a game that has 12 cards, user clicks on a card and the cards shuffl (user current score increases)\n// if user clicks on same card twice, score resets --> if previous score was highest score of session, high score is prev\n\n// MUST HAVE COMPONENTS\n// scoreboard that shows current score and highest session score\n// cards on screen that have discernible text, images - able to click\n// display said cards in random order at when component mounts\n//\n\n// if user hits same card twice in session, reset currentScore - if high score, update high score\n// if user score is cards length, user wins\n",{"ruleId":"15","severity":1,"message":"16","line":55,"column":3,"nodeType":"17","endLine":55,"endColumn":12,"suggestions":"18"},{"ruleId":"19","severity":1,"message":"20","line":65,"column":13,"nodeType":"21","endLine":71,"endColumn":14},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setCards'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [cards, clickedCards] as a second argument to the useEffect Hook.","Identifier",["22"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"23","fix":"24"},"Add dependencies array: [cards, clickedCards]",{"range":"25","text":"26"},[2274,2274],", [cards, clickedCards]"]